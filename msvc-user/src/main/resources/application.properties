spring.cloud.kubernetes.secrets.enable-api=true
spring.cloud.kubernetes.discovery.all-namespaces=true

spring.application.name=msvc-user

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${DB_HOST:mysql8:3306}/${DB_DATABASE:msvc_user}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=America/Lima
spring.datasource.username=${DB_USER:root}
spring.datasource.password=${DB_PASSWORD:matichelo17@}

spring.jpa.generate-ddl=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

spring.profiles.active=dev

server.port=${PORT:8001}

logging.level.org.hibernate.SQL=DEBUG
logging.file.path=/app/logs

msvc.course.url=${COURSE_URL:msvc-course:8002}

#spring:
#  cloud:
#    kubernetes:
#      secrets:
#        enable-api: true
#      discovery:
#        all-namespaces: true
#  application:
#    name: msvc-user
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://${DB_HOST:mysql8:3306}/${DB_DATABASE:msvc_user}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=America/Lima
#    username: ${DB_USER:root}
#    password: ${DB_PASSWORD:matichelo17@}
#  jpa:
#    generate-ddl: true
#    database-platform: org.hibernate.dialect.MySQL8Dialect
#  profiles:
#    active: dev
#server:
#  port: ${PORT:8001}
#logging:
#  level:
#    org:
#      hibernate:
#        SQL: DEBUG
#  file:
#    path: /app/logs
#msvc:
#  course:
#    url: ${COURSE_URL:msvc-course:8002}
#
## Configuración para actuator
#management:
#  # Si se quiere habilitar todos los endpoints de actuator
#  endpoints:
#    web:
#      exposure:
#        include: ["*"]
#  # health.show-details=always es para que siempre muestre los detalles de los health checks
#    # health.probes.enabled=true es para habilitar los health checks de actuator, probes se le dice a los health checks
#  endpoint:
#    health:
#      show-details: always
#      probes:
#        enabled: true
#    # health.livenessstate.enabled=true, liveness state es para saber si la aplicación está viva o no
#    # health.readinesstate.enabled=true, readiness state es para saber si la aplicación está lista para recibir tráfico o no
#  health:
#    livenessstate:
#      enabled: true
#    readinesstate:
#      enabled: true


# configuration for kubernetes
# secrets.enable-api=true es para habilitar el uso de secretos en kubernetes en spring cloud
#spring.cloud.kubernetes.secrets.enable-api=true
# es para que spring cloud pueda descubrir todos los servicios en todos los namespaces
#spring.cloud.kubernetes.discovery.all-namespaces=true